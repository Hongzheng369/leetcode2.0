class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();

        //Two special cases: no number, or only one number.
        if (nums.length == 0 || nums == null)
            ans.add(new ArrayList<Integer>());
        else if (nums.length == 1){
            ans.add(new ArrayList<Integer>());
            List<Integer> tmp = new ArrayList<Integer>();
            tmp.add(nums[0]);
            ans.add(tmp);
        }

        //Normally, here is how we do when "nums" has more than one element.
        else {
            for (int i = 0; i < (int)Math.pow(2,nums.length); i++){
                int num = i;
                int idx = nums.length - 1;
                List<Integer> tmp = new ArrayList<Integer>();
                while (num != 0){
                    if (num % 2 == 1)
                        tmp.add(nums[idx]);
                    idx--;
                    num /= 2;
                }
                ans.add(tmp);
            }
        }

        return ans;
    }
}
 
