class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<String>();
        backtrack(list, "", 0, 0, n);
        return list;
    }
        public void backtrack(List<String> list, String str, int open, int end, int max){
            if(str.length() == max*2){
                list.add(str);
                return;
            }            
            if(open < max)
                backtrack(list, str +"(", open+1, end, max);
            if(end < open)
                backtrack(list, str + ")", open, end+1, max);     
        }    
}

