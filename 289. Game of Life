题目大意
玩一个生存游戏。这个游戏给了一个二维数组，每个数组上写的是这个地方是否有部落。看每个位置的8-连通位置的部落数：

如果一个活着的部落，其周围少于2个部落，这个部落会死
如果一个活着的部落，其周围部落数在2或者3，这个部落活到下一个迭代中
如果一个活着的部落，其周围多于3个部落，这个部落会死
如果一个死了的部落，其周围多于3个部落，这个部落会活
一次迭代是同时进行的，求一轮之后，整个数组。
 ———————————————— 
class Solution {
    public void gameOfLife(int[][] board) {
        int row = board.length-1, col = board[0].length-1;
        for(int i = 0; i<= row;i++){
            for(int j = 0; j <= col;j++){
                int count = 0;
                if(board[i][j] == 0){
                    for(int x= -1; x<= 1;x++){
                        if(i + x >= 0 && i + x <= row){
                            for(int y = -1; y <= 1; y++){
                                if(y + j >= 0 && y + j <= col){
                                    if ((x != 0 || y != 0) && ((board[i + x][j + y] & 1) == 1))
                                        count++;
                                    
                                }
                            }
                        }
                    }               
                    if(count == 3)
                         board[i][j] = 2;
                    else
                         board[i][j] = 0;
                
              }
               else if(board[i][j] == 1){
                    for(int x= -1; x<= 1;x++){
                        if(i + x >= 0 && i + x <= row){
                            for(int y = -1; y <= 1; y++){
                                if(y + j >= 0 && y + j <= col){
                                    if((x != 0 || y != 0) && ((board[i+x][j+y] & 1) == 1))
                                        count++;
                                    
                                }
                            }
                        }
                    }               
                    if(count ==2 || count==3)
                         board[i][j] = 3;
                    else
                         board[i][j] = 1;
                
              }
            }
        }
        for(int i = 0; i<= row; i++){
            for(int j = 0; j <= col; j++){
                board[i][j] = board[i][j] >> 1;
            }
        }
        
    }
}
