89. Gray Code

class Solution {
    public List<Integer> grayCode(int n) {
    
    ArrayList<Integer> gc=new ArrayList<Integer>();
    gc.add(0);
    for(int i=0;i<n;i++){
        int size=gc.size();
        for(int k=size-1;k>=0;k--)
            gc.add(gc.get(k) | 1<<i);
    }
    return gc;
    }
}







///////////////////////////////////////////////



















public class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> list = new ArrayList<Integer>();
        if (n==0) {
            list.add(0);
        } else {
            grayCode(n, 0, list);
        }
        return list;
    }
    public void grayCode(int n, int val, List<Integer> list) {
        int flag = Integer.bitCount(val)%2;
        if (n > 1) {
            grayCode(n-1, val<<1|(flag&1), list);
            grayCode(n-1, val<<1|(flag^1), list);
        } else {
            list.add(val<<1|(flag&1));
            list.add(val<<1|(flag^1));
        }
    }
}
