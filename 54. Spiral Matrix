class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ans = new ArrayList<>();
        if(matrix.length==0){return ans;}
        int flaghs= 0, flagzf= 0;
        int hei = matrix.length, wid = matrix[0].length;
        int i = 0;
        int cs = 0,ce = wid-1, rs = 0,re = hei-1;
        while(i<hei*wid){
            if(flaghs==0&&flagzf==0){
                for(int a = cs; a<=ce;a++){
                    ans.add(matrix[rs][a]);
                    i++;
                }
                rs++;
                flaghs = 1;
            }
            else if(flaghs==1&&flagzf==0){
                for(int a = rs;a<=re;a++){
                    ans.add(matrix[a][ce]);
                    i++;
                }
                ce--;
                flaghs = 0;
                flagzf = 1;
            }
            else if(flaghs==0&&flagzf==1){
                for(int a = ce;a>=cs;a--){
                    ans.add(matrix[re][a]);
                    i++;
                }
                re--;
                flaghs = 1;
            }
            else if(flaghs==1&&flagzf==1){
                for(int a = re;a>=rs;a--){
                    ans.add(matrix[a][cs]);
                    i++;
                }
                cs++;
                flaghs = 0;
                flagzf = 0;
            }
        }
        return ans;
    }
}
